import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterModule, Router, ActivatedRoute } from '@angular/router';
import { Observable, map, catchError, of } from 'rxjs';
import { NzGridModule } from 'ng-zorro-antd/grid';

@Component({
  standalone: true,
  imports: [CommonModule, RouterModule, NzGridModule],
  template: `
    <div class="container mx-auto px-2 py-2 text-lg md:mt-4">
      <div class="mt-5 grid justify-center gap-20 text-base">
        <a class="" routerLink="/pulling/pulling">Pulling</a>
        <a class="" routerLink="/pulling/dropoff">Drop Off</a>
      </div>
    </div>
    <div *ngIf="initData$ | async as data" nz-row nzJustify="center">
      <div
        nz-col
        nzXs="20"
        nzSm="16"
        nzMd="12"
        nzLg="10"
        nzXXl="6"
        style="font-size: 18px; line-height: 2.5;"
      >
        <div nz-row nzJustify="start">
          <div nz-col style="height: 50px"></div>
        </div>
        <div nz-row nzJustify="start">
          <div nz-col nzSpan="11" style="text-align: right">Cart:&nbsp;</div>
          <div style="font-weight: bold" nz-col>{{ data.Cart }}</div>
        </div>
        <div nz-row nzJustify="start">
          <div nz-col nzSpan="11" style="text-align: right">
            Pulls on cart:&nbsp;
          </div>
          <div style="font-weight: bold" nz-col>{{ data.CartPulls }}</div>
        </div>
        <div nz-row nzJustify="start">
          <div nz-col nzSpan="11" style="text-align: right">
            Pulls for user:&nbsp;
          </div>
          <div style="font-weight: bold" nz-col>{{ data.UserPulls }}</div>
        </div>
      </div>
    </div>
  `,
})
export class MenuComponent {
  public initData$: Observable<any>;

  constructor(private _router: Router, private _actRoute: ActivatedRoute) {}

  ngOnInit(): void {
    this.initData$ = this._actRoute.data.pipe(
      map((res) => {
        return res.userPullInfo[0];
      }),
      catchError((error) =>
        of({ message: error.message, messageType: 'error' })
      )
    );
  }
}
