query checkReceiptHeader($id: Int!) {
  findReceiptH(ReceiptH: { _id: $id }) {
    _id
  }
}

query findReceiptHeaderList($PartNumber: String, $VendorNumber: String) {
  findReceiptInfoByPartorVendor(
    PartNumber: $PartNumber
    VendorNumber: $VendorNumber
  ) {
    _id
    VendorName
  }
}

query findReceiptHeaderForReceiving($ReceiptHID: Int!, $statusID: Int!) {
  findReceiptInfoByIdAndStatus(ReceiptHID: $ReceiptHID, statusID: $statusID) {
    RECEIPTLs {
      _id
      ExpectedQuantity
      DateCode
      ROHS
      LineNumber
      ProductID
      CountryID
      Country {
        ISO3
      }
      Product {
        PartNumber
        ProductCode {
          ProductCodeNumber
        }
      }
      RECEIPTLDs {
        PurchaseOrderL {
          LineNumber
          PurchaseOrderH {
            PurchaseOrderNumber
          }
        }
      }
    }
  }
}

query fetchProductInfoForReceiving(
  $ProductCode: String!
  $PartNumber: String!
) {
  fetchProductMICFromMerp(ProductCode: $ProductCode, PartNumber: $PartNumber)
  fetchPartMessage(ProductCode: $ProductCode, PartNumber: $PartNumber) {
    comments
  }
}

query findPartForReceiving($PartNumber: String!) {
  findProducts(Product: { PartNumber: $PartNumber }) {
    _id
    PartNumber
    ProductCode {
      ProductCodeNumber
    }
  }
}

mutation ReceivingUpdateReceiptL(
  $idList: [Int]!
  $CountryID: Int!
  $DateCode: String!
  $ROHS: Boolean!
) {
  updateReceiptLsByID(
    ReceiptL: { CountryID: $CountryID, DateCode: $DateCode, ROHS: $ROHS }
    idList: $idList
  )
}

query printReceivingLabel(
  $PRINTER: String!
  $ITN: String!
  $DPI: String!
  $ORIENTATION: String!
) {
  printReceivingLabel(
    PRINTER: $PRINTER
    ITN: $ITN
    DPI: $DPI
    ORIENTATION: $ORIENTATION
  )
}

query printTextLabel(
  $PRINTER: String!
  $DPI: String!
  $ORIENTATION: String!
  $LINE1: String!
  $LINE2: String!
  $LINE3: String!
  $LINE4: String!
) {
  printTextLabel(
    PRINTER: $PRINTER
    DPI: $DPI
    ORIENTATION: $ORIENTATION
    LINE1: $LINE1
    LINE2: $LINE2
    LINE3: $LINE3
    LINE4: $LINE4
  )
}

mutation updateAfterReceiving(
  $ITNList: [ITNAndQuantity]!
  $Inventory: updateInventory!
  $info: InventoryForMerp!
  $ReceiptLID: Int!
) {
  updateAfterReceiving(
    ITNList: $ITNList
    Inventory: $Inventory
    ReceiptLID: $ReceiptLID
  )
  createInventoryFromOMS(ITNList: $ITNList, Inventory: $Inventory, info: $info)
}

query checkBinLocation($Barcode: String!, $DistributionCenter: String!) {
  findContainer(
    Container: { DistributionCenter: $DistributionCenter, Barcode: $Barcode }
  ) {
    _id
    Barcode
  }
}
