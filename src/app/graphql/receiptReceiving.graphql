query checkReceiptHeader($id: Int!) {
  findReceiptH(ReceiptH: { _id: $id }) {
    _id
  }
}

mutation generateReceiptForReceiving(
  $PurchaseOrderNumber: String!
  $LineNumber: Int!
  $Quantity: Float!
) {
  generateReceiptForReceiving(
    PurchaseOrderNumber: $PurchaseOrderNumber
    LineNumber: $LineNumber
    Quantity: $Quantity
  )
}

query findReceiptHeaderList($PartNumber: String, $VendorNumber: String) {
  findReceiptInfoByPartorVendor(
    PartNumber: $PartNumber
    VendorNumber: $VendorNumber
  ) {
    _id
    VendorName
  }
}

query fetchPurchaseOrderInfo(
  $PurchaseOrderNumber: String
  $DistributionCenter: String
) {
  findPurchaseOrderH(
    PurchaseOrder: {
      DistributionCenter: $DistributionCenter
      PurchaseOrderNumber: $PurchaseOrderNumber
    }
  ) {
    _id
    Vendor {
      VendorName
    }
    PURCHASEORDERLs {
      LineNumber
      QuantityReceived
      QuantityOnOrder
      Product {
        PartNumber
        ProductCode {
          ProductCodeNumber
        }
      }
    }
  }
}

query findReceiptHeaderForReceiving($ReceiptHID: Int!, $statusID: Int!) {
  findReceiptInfoByIdAndStatus(ReceiptHID: $ReceiptHID, statusID: $statusID) {
    RECEIPTLs {
      _id
      ExpectedQuantity
      DateCode
      ROHS
      LineNumber
      ProductID
      CountryID
      Country {
        ISO3
      }
      Product {
        PartNumber
        ProductCode {
          ProductCodeNumber
        }
      }
      RECEIPTLDs {
        _id
        PurchaseOrderL {
          LineNumber
          QuantityOnOrder
          QuantityReceived
          PurchaseOrderH {
            PurchaseOrderNumber
          }
        }
      }
    }
  }
}

query fetchProductInfoForReceiving(
  $ProductCode: String!
  $PartNumber: String!
) {
  fetchProductMICFromMerp(ProductCode: $ProductCode, PartNumber: $PartNumber)
  fetchPartMessage(ProductCode: $ProductCode, PartNumber: $PartNumber) {
    comments
  }
}

query findPartForReceiving($PartNumber: String!) {
  findProducts(Product: { PartNumber: $PartNumber }) {
    _id
    PartNumber
    ProductCode {
      ProductCodeNumber
    }
  }
}

mutation ReceivingUpdateReceiptL(
  $idList: [Int]!
  $CountryID: Int!
  $DateCode: String
  $ROHS: Boolean!
) {
  updateReceiptLsByID(
    ReceiptL: { CountryID: $CountryID, DateCode: $DateCode, ROHS: $ROHS }
    idList: $idList
  )
}

query printReceivingITNLabel(
  $PRINTER: String!
  $ITN: String!
  $PRODUCTCODE: String!
  $PARTNUMBER: String!
  $DPI: String!
  $ORIENTATION: String!
) {
  printReceivingITNLabel(
    PRINTER: $PRINTER
    ITN: $ITN
    DPI: $DPI
    PRODUCTCODE: $PRODUCTCODE
    PARTNUMBER: $PARTNUMBER
    ORIENTATION: $ORIENTATION
  )
}

query printTextLabel(
  $PRINTER: String!
  $DPI: String!
  $ORIENTATION: String!
  $LINE1: String!
  $LINE2: String!
  $LINE3: String!
  $LINE4: String!
) {
  printTextLabel(
    PRINTER: $PRINTER
    DPI: $DPI
    ORIENTATION: $ORIENTATION
    LINE1: $LINE1
    LINE2: $LINE2
    LINE3: $LINE3
    LINE4: $LINE4
  )
}

mutation updateAfterReceiving(
  $ITNList: [ITNAndQuantity]!
  $Inventory: updateInventory!
  $info: InventoryForMerp!
  $ReceiptLID: Int!
) {
  updateReceiptLD(ReceiptLID: $ReceiptLID, ReceiptLD: { ReceiptStatusID: 20 })
  createInventoryFromOMS(ITNList: $ITNList, Inventory: $Inventory, info: $info)
}

query checkBinLocation($Barcode: String!, $DistributionCenter: String!) {
  findContainer(
    Container: { DistributionCenter: $DistributionCenter, Barcode: $Barcode }
  ) {
    _id
    Barcode
  }
}

mutation suspectInventory($ITN: String!, $DC: String!, $reasonIDList: [Int]!) {
  suspectInventory(
    DistributionCenter: $DC
    InventoryTrackingNumber: $ITN
    reasonIDList: $reasonIDList
  )
}

mutation clearSuspectInventory($ITN: String!, $DC: String!) {
  clearSuspectInventory(InventoryTrackingNumber: $ITN, DistributionCenter: $DC)
}
