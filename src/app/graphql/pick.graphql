mutation verifyCartAndUpdate($Container: searchContainer!, $UserID: Int!) {
  updateUserCart(Container: $Container, UserID: $UserID) {
    _id
  }
}

mutation verifyCartAndUpdateForDropOff(
  $Container: searchContainer!
  $UserID: Int!
) {
  updateUserCartForDropOff(Container: $Container, UserID: $UserID) {
    _id
  }
}

query verifyPositionBarcodeForPulling($Container: searchContainer!) {
  findContainer(Container: $Container) {
    _id
  }
}

query fetchPickingSettings($UserInfo: searchUserInfo!) {
  findUserInfo(UserInfo: $UserInfo) {
    Zone
    StrictPriority
    PriorityCutoff
    CartID
  }
}

query findNextITNForPulling(
  $Zone: Int!
  $StrictPriority: Boolean!
  $PriorityCutoff: Int!
  $Barcode: String!
) {
  findNextITNForPulling(
    Zone: $Zone
    StrictPriority: $StrictPriority
    PriorityCutoff: $PriorityCutoff
    Barcode: $Barcode
  ) {
    InventoryID
    InventoryTrackingNumber
    OrderNumber
    NOSINumber
    Barcode
  }
}

mutation updateAfterPulling(
  $OrderLineDetail: updateOrderLineDetail!
  $Inventory: updateInventory!
  $InventoryID: Int!
  $log: [insertUserEventLog]!
) {
  updateOrderLineDetail(
    OrderLineDetail: $OrderLineDetail
    InventoryID: $InventoryID
  )
  updateInventory(_id: $InventoryID, Inventory: $Inventory)
  insertUserEventLogs(log: $log) {
    _id
  }
}

mutation updatePullingNotFound(
  $OrderLineDetail: updateOrderLineDetail!
  $InventoryID: Int!
  $log: [insertUserEventLog]!
) {
  updateOrderLineDetail(
    OrderLineDetail: $OrderLineDetail
    InventoryID: $InventoryID
  )
  insertUserEventLogs(log: $log) {
    _id
  }
}

query findITNsInCartForDropOff($ContainerID: Int!) {
  findInventorys(Inventory: { ContainerID: $ContainerID }) {
    ORDERLINEDETAILs {
      Order {
        OrderNumber
        NOSINumber
      }
    }
    InventoryTrackingNumber
  }
}

mutation updateAfterDropOff(
  $Inventory: updateInventory!
  $ContainerID: Int!
  $UserID: Int!
  $UserInfo: updateUserInfo!
  $log: [insertUserEventLog]!
) {
  updateInventory(Inventory: $Inventory, ContainerID: $ContainerID)
  updateUserInfo(UserInfo: $UserInfo, _id: $UserID)
  insertUserEventLogs(log: $log) {
    _id
  }
}

query findContainer($Container: searchContainer!) {
  findContainer(Container: $Container) {
    _id
  }
}
