query findITNsByShelf($Container: searchContainer!) {
  findContainers(Container: $Container) {
    INVENTORies {
      InventoryTrackingNumber
      ORDERLINEDETAILs {
        StatusID
      }
    }
  }
}

query fetchCountryList {
  fetchAllCountry {
    _id
    CountryName
    ISO2
    ISO3
  }
}

query findBindedPrinter($Name: String!) {
  findPrinters(Printer: { Name: $Name }) {
    Name
    Orientation
    DPI
  }
}

query findInventoryByUser($username: String) {
  findInventoryByUser(Username: $username) {
    InventoryTrackingNumber
  }
}

mutation createITN($LocationCode: String!) {
  createITN(LocationCode: $LocationCode)
}

mutation find_or_create_userInfo($UserInfo: insertUserInfo!) {
  findOrCreateUserInfo(UserInfo: $UserInfo) {
    _id
    Name
    DistributionCenter
  }
}

mutation insert_UserEventLogs($log: [insertUserEventLog]!) {
  insertUserEventLogs(log: $log) {
    _id
  }
}

mutation insert_EventLogs($logs: [insertEventLog]!) {
  insertEventLogs(logs: $logs)
}

mutation create_EventLogs(
  $oldLogs: [insertUserEventLog]!
  $eventLogs: [insertEventLog]!
) {
  insertUserEventLogs(log: $oldLogs) {
    _id
  }
  insertEventLogs(logs: $eventLogs)
}

mutation update_Merp_QCBin($ITN: String!) {
  updateMerpQCBin(ITN: $ITN) {
    success
  }
}

mutation updateContainer($Container: updateContainer!, $ContainerID: Int!) {
  updateContainer(Container: $Container, _id: $ContainerID)
}

mutation findorCreateUserContainer(
  $Barcode: String!
  $DistributionCenter: String!
  $ContainerTypeID: Int!
) {
  findOrCreateUserContainer(
    Container: {
      ContainerTypeID: $ContainerTypeID
      Barcode: $Barcode
      DistributionCenter: $DistributionCenter
    }
  ) {
    _id
  }
}

mutation changeItnListForMerp($ITNList: [InventoryUpdateForMerp]!) {
  changeItnListForMerp(ITNList: $ITNList)
}

# mutation sendMail($Subject: String!, $Text: String!, $Recipients: String!) {
#   sendMail(Subject: $Subject, Text: $Text, Recipients: $Recipients)
# }
