query verifyContainerForAggregationIn(
  $DistributionCenter: String!
  $Barcode: String!
) {
  findContainer(
    Container: { DistributionCenter: $DistributionCenter, Barcode: $Barcode }
  ) {
    _id
    Barcode
    ContainerTypeID
    Warehouse
    Row
    Aisle
    Section
    Shelf
    ShelfDetail
    ContainerType {
      IsMobile
    }
    INVENTORies {
      _id
      InventoryTrackingNumber
      ParentITN
      Product {
        ProductCode {
          ProductCodeNumber
        }
        PartNumber
        ProductTier
      }
      ORDERLINEDETAILs {
        _id
        StatusID
        WMSPriority
        Quantity
        OrderID
        Order {
          OrderNumber
          NOSINumber
          DistributionCenter
          ShipmentMethod {
            _id
            ShippingMethod
            PriorityPinkPaper
          }
          Customer {
            CustomerNumber
            CustomerTier
          }
        }
        OrderLine {
          OrderLineNumber
        }
      }
    }
  }
}

query fetchLocationAndOrderDetailForAgIn($OrderID: Int!) {
  findOrderLineDetails(OrderLineDetail: { OrderID: $OrderID }) {
    _id
    Quantity
    StatusID
    Inventory {
      InventoryTrackingNumber
      Container {
        Barcode
        Warehouse
        Row
        Aisle
        Section
        Shelf
        ShelfDetail
      }
    }
  }
}

query countOrderItnsFromMerp(
  $LocationCode: String!
  $OrderNumber: String!
  $NOSINumber: String!
) {
  countOrderItns(
    LocationCode: $LocationCode
    OrderNumber: $OrderNumber
    NOSINumber: $NOSINumber
  )
}

query fetchHazardMaterialLevel($ProductList: [String]!) {
  fetchProductInfoFromMerp(ProductList: $ProductList) {
    HazardMaterialLevel
  }
}

mutation updateAfterAgOut(
  $OrderID: Int!
  $OrderLineDetail: updateOrderLineDetail!
  $DistributionCenter: String!
  $OrderNumber: String!
  $NOSINumber: String!
  $MerpStatus: String!
  $UserOrStatus: String!
  $FileKeyList: [String!]!
  $ActionType: String!
  $Action: String!
  $ITNList: [InventoryUpdateForMerp]!
) {
  updateOrderLineDetail(OrderID: $OrderID, OrderLineDetail: $OrderLineDetail)
  updateOrder(_id: $OrderID, Order: { isSelected: 0 })
  # deleteAndInsertRouteTable(lpnList: $toteList)
  updateMerpOrderStatus(
    OrderNumber: $OrderNumber
    NOSINumber: $NOSINumber
    Status: $MerpStatus
    UserOrStatus: $UserOrStatus
  ) {
    success
    message
  }

  updateMerpWMSLog(
    FileKeyList: $FileKeyList
    LocationCode: $DistributionCenter
    ActionType: $ActionType
    Action: $Action
  ) {
    success
    message
  }

  changeItnListForMerp(ITNList: $ITNList)
}

mutation updateStatusAfterAgIn($InventoryIDList: [Int]!, $StatusID: Int!) {
  updateOrderLineDetailList(
    InventoryIDList: $InventoryIDList
    OrderLineDetail: { StatusID: $StatusID }
  )
}

mutation updateLocationAfterAgIn(
  $ContainerID: Int!
  $Container: updateContainer!
) {
  updateContainer(_id: $ContainerID, Container: $Container)
}

mutation updateMerpWMSLog(
  $DistributionCenter: String!
  $FileKeyList: [String!]!
  $ActionType: String!
  $Action: String!
) {
  updateMerpWMSLog(
    FileKeyList: $FileKeyList
    LocationCode: $DistributionCenter
    ActionType: $ActionType
    Action: $Action
  ) {
    success
    message
  }
}

mutation updateMerpOrderStatus(
  $OrderNumber: String!
  $NOSINumber: String!
  $Status: String!
  $UserOrStatus: String!
) {
  updateMerpOrderStatus(
    OrderNumber: $OrderNumber
    NOSINumber: $NOSINumber
    Status: $Status
    UserOrStatus: $UserOrStatus
  ) {
    success
    message
  }
}

mutation pickOrderForAgOut {
  pickOrderForAgOut {
    OrderID
    OrderNumber
    NOSINumber
  }
}

query verifyOrderForAgOut(
  $DistributionCenter: String!
  $OrderNumber: String!
  $NOSINumber: String!
) {
  findOrder(
    Order: {
      DistributionCenter: $DistributionCenter
      OrderNumber: $OrderNumber
      NOSINumber: $NOSINumber
    }
  ) {
    _id
    ORDERLINEDETAILs {
      StatusID
    }
  }
  countOrderItns(
    LocationCode: $DistributionCenter
    OrderNumber: $OrderNumber
    NOSINumber: $NOSINumber
  )
}

query fetchContainerForAgoutPick($OrderID: Int) {
  findOrderLineDetails(OrderLineDetail: { OrderID: $OrderID }) {
    WMSPriority
    Quantity
    Order {
      OrderNumber
      NOSINumber
      DistributionCenter
      ShipmentMethod {
        _id
        ShippingMethod
        PriorityPinkPaper
      }
      Customer {
        CustomerNumber
        CustomerTier
      }
    }
    OrderLine {
      OrderLineNumber
    }
    Inventory {
      InventoryTrackingNumber
      ParentITN
      Container {
        Barcode
        Warehouse
        Row
        Aisle
        Section
        Shelf
        ShelfDetail
      }
      Product {
        ProductCode {
          ProductCodeNumber
        }
        PartNumber
        ProductTier
      }
    }
  }
}
