# pull to pick
query verifyITNForSorting($ITN: String!, $DC: String!) {
  findInventory(
    Inventory: { InventoryTrackingNumber: $ITN, DistributionCenter: $DC }
  ) {
    _id
    QuantityOnHand
    Container {
      _id
      ContainerType {
        IsMobile
      }
    }
    Product {
      _id
      ProductCode {
        ProductCodeNumber
      }
      DCPRODUCTs {
        Velocity
      }
      PartNumber
    }
  }
}

query verifyContainerForSorting(
  $Barcode: String!
  $DistributionCenter: String!
) {
  findContainer(
    Container: { Barcode: $Barcode, DistributionCenter: $DistributionCenter }
  ) {
    _id
    ContainerTypeID
    ContainerType {
      IsMobile
    }
  }
}

query fetchSuggetionLocationForSorting($ProductID: Int!, $limit: Int) {
  fetchSuggetionLocationForSorting(ProductID: $ProductID, limit: $limit) {
    Quantity
    Barcode
    Zone
  }
}

query fetchITNInfoByContainerforStocking($Barcode: String!, $DC: String!) {
  findContainer(Container: { Barcode: $Barcode, DistributionCenter: $DC }) {
    _id
    ContainerType {
      IsMobile
    }
    INVENTORies {
      _id
      InventoryTrackingNumber
      QuantityOnHand
      Product {
        _id
      }
    }
  }
}

query fetchInventoryInUserContainer($ContainerID: Int!) {
  findContainer(Container: { _id: $ContainerID }) {
    INVENTORies {
      QuantityOnHand
      InventoryTrackingNumber
    }
  }
}

mutation updateInventoryAfterSorting(
  $User: String!
  $BinLocation: String!
  $ITN: String!
) {
  itnLocationChange(User: $User, ITN: $ITN, BinLocation: $BinLocation)
}

mutation moveInventoryToContainerForStocking(
  $User: String!
  $ITN: String!
  $BinLocation: String!
) {
  itnLocationChange(User: $User, ITN: $ITN, BinLocation: $BinLocation)
}

mutation updateNotFoundForStocking(
  $ITNList: [String]!
  $linkList: [insertInventorySuspectReason]!
) {
  updateNotFoundForStocking(ITNList: $ITNList)
  insertInventorySuspectReason(linkList: $linkList)
}
