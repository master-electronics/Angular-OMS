query fetchContainerForAggregationIn(
  $Barcode: String!
  $DistributionCenter: String!
) {
  findContainer(Barcode: $Barcode, DistributionCenter: $DistributionCenter) {
    _id
    Row
    Type {
      IsMobile
    }
    INVENTORies {
      InternalTrackingNumber
    }
  }
}

query pickOrdersForAggregationOut(
  $agInDone: Int!
  $agOutPresent: Int!
  $agOutPicking: Int!
  $limit: Int
) {
  agInDone: findOrder(StatusID: $agInDone, limit: $limit) {
    ...orderInfo
  }
  agOutPresent: findOrder(StatusID: $agOutPresent, limit: $limit) {
    ...orderInfo
  }
  agOutPicking: findOrder(StatusID: $agOutPicking, limit: $limit) {
    ...orderInfo
  }
}

fragment orderInfo on Order {
  _id
  DistributionCenter
  OrderNumber
  NOSINumber
  StatusID
  Status {
    Name
  }
  LastUpdated
}

query fetchOrderStatus(
  $_id: Int
  $DistributionCenter: String
  $OrderNumber: String
  $NOSINumber: String
) {
  findOrder(
    _id: $_id
    DistributionCenter: $DistributionCenter
    OrderNumber: $OrderNumber
    NOSINumber: $NOSINumber
  ) {
    _id
    StatusID
  }
}

mutation updateOrder(
  $_id: Int
  $Order: OrderUpdate!
  $DistributionCenter: String
  $OrderNumber: String
  $NOSINumber: String
  $StatusID: Int
) {
  updateOrder(
    _id: $_id
    Order: $Order
    DistributionCenter: $DistributionCenter
    OrderNumber: $OrderNumber
    NOSINumber: $NOSINumber
    StatusID: $StatusID
  ) {
    success
    message
  }
}

mutation updateOrderAfterAgOut(
  $_id: Int
  $Order: OrderUpdate!
  $DistributionCenter: String!
  $OrderNumber: String!
  $NOSINumber: String!
  $MerpStatus: String!
  $UserOrStatus: String!
  $FileKeyList: [String!]!
  $ActionType: String!
  $Action: String!
) {
  updateOrder(
    _id: $_id
    DistributionCenter: $DistributionCenter
    OrderNumber: $OrderNumber
    NOSINumber: $NOSINumber
    Order: $Order
  ) {
    success
    message
  }
  updateMerpOrderStatus(
    OrderNumber: $OrderNumber
    NOSINumber: $NOSINumber
    Status: $MerpStatus
    UserOrStatus: $UserOrStatus
  ) {
    success
    message
  }
  updateMerpWMSLog(
    FileKeyList: $FileKeyList
    LocationCode: $DistributionCenter
    ActionType: $ActionType
    Action: $Action
  ) {
    success
    message
  }
}

query fetchLocationForAggregationOut(
  $DistributionCenter: String
  $OrderNumber: String
  $NOSINumber: String
) {
  findOrder(
    DistributionCenter: $DistributionCenter
    OrderNumber: $OrderNumber
    NOSINumber: $NOSINumber
  ) {
    _id
    INVENTORies {
      Container {
        Barcode
        DistributionCenter
        Warehouse
        Row
        Aisle
        Section
        Shelf
        ShelfDetail
      }
      InternalTrackingNumber
      ProductCode
      PartNumber
    }
  }
}

query fetchHazardMaterialLevel($ProductList: [String]!) {
  fetchProductInfoFromMerp(ProductList: $ProductList) {
    HazardMaterialLevel
  }
}
